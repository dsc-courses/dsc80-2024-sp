
# Do NOT edit this file. Instead, just call it from the command line,
# using the instructions in the assignment notebook.

import sys
questions = sys.argv[1:]


valid_ids = ['q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7']
break_flag = False
invalid_ids = []
for question in questions:
    if question != 'all' and question not in valid_ids:
        invalid_ids.append(question)

if len(invalid_ids) > 0:
    print(str(invalid_ids) + ' is/are not a valid question number(s). The possible question numbers are ' + str(valid_ids) + '.')
    sys.exit()

# Initialize Otter
import otter
grader = otter.Notebook("lab.ipynb")

# %load_ext autoreload
# %autoreload 2

from lab import *

import os
import io
from pathlib import Path
import pandas as pd
import numpy as np

# don't change this cell -- it is needed for the tests to work
trick_ans = trick_bool()

if 'q1' in questions or questions == [] or 'all' in questions:
    print(grader.check("q1"))

# don't change this cell -- it is needed for the tests to work
pop_data = np.random.choice(range(10), size=(100, 4))
df_pop = pd.DataFrame(pop_data, columns='A B C D'.split())
out_pop = population_stats(df_pop)

if 'q2' in questions or questions == [] or 'all' in questions:
    print(grader.check("q2"))

# don't change this cell -- it is needed for the tests to work
common_data = np.random.choice(range(10), size=(100, 2))
common_df = pd.DataFrame(common_data, columns='A B'.split())
common_out = most_common(common_df, N=3)
common_out

if 'q3' in questions or questions == [] or 'all' in questions:
    print(grader.check("q3"))

# don't change this cell -- it is needed for the tests to work
super_fp = Path('data') / 'superheroes_powers.csv'
powers = pd.read_csv(super_fp)
super_out = super_hero_powers(powers)

if 'q4' in questions or questions == [] or 'all' in questions:
    print(grader.check("q4"))

# don't change this cell -- it is needed for the tests to work
superheroes_fp = Path('data') / 'superheroes.csv'
heroes = pd.read_csv(superheroes_fp, index_col=0)
clean_out = clean_heroes(heroes)

if 'q5' in questions or questions == [] or 'all' in questions:
    print(grader.check("q5"))

clean_out.head(10)

# don't change this cell -- it is needed for the tests to work
stats_out = super_hero_stats()

if 'q6' in questions or questions == [] or 'all' in questions:
    print(grader.check("q6"))

# don't change this cell -- it is needed for the tests to work
fp = Path('data') / 'universities_unified.csv'
df = pd.read_csv(fp)
cleaned = clean_universities(df)
info = university_info(cleaned)

if 'q7' in questions or questions == [] or 'all' in questions:
    print(grader.check("q7"))


