
# Do NOT edit this file. Instead, just call it from the command line,
# using the instructions in the assignment notebook.

import sys
questions = sys.argv[1:]


valid_ids = ['q1', 'q2', 'q3', 'q4', 'q5', 'q6', 'q7', 'q8', 'q9']
break_flag = False
invalid_ids = []
for question in questions:
    if question != 'all' and question not in valid_ids:
        invalid_ids.append(question)

if len(invalid_ids) > 0:
    print(str(invalid_ids) + ' is/are not a valid question number(s). The possible question numbers are ' + str(valid_ids) + '.')
    sys.exit()

# Initialize Otter
import otter
grader = otter.Notebook("lab.ipynb")

# %load_ext autoreload
# %autoreload 2

from lab import *

import pandas as pd
import numpy as np
import io
from pathlib import Path
import os

# don't change this cell -- it is needed for the tests to work
fp = Path('data') / 'login_table.csv'
login = pd.read_csv(fp)
q1_result = prime_time_logins(login)

if 'q1' in questions or questions == [] or 'all' in questions:
    print(grader.check("q1"))

# don't change this cell -- it is needed for the tests to work
fp = Path('data') / 'login_table.csv'
login = pd.read_csv(fp)
q2_result = count_frequency(login)

if 'q2' in questions or questions == [] or 'all' in questions:
    print(grader.check("q2"))

if 'q3' in questions or questions == [] or 'all' in questions:
    print(grader.check("q3"))

if 'q4' in questions or questions == [] or 'all' in questions:
    print(grader.check("q4"))

# don't change this cell -- it is needed for the tests to work
superheroes_fp = Path('data') / 'superheroes.csv'
heroes = pd.read_csv(superheroes_fp, index_col=0)
bhbe_out = bhbe_col(heroes)
obs_stat_out = superheroes_observed_statistic(heroes)
simulate_bhbe_out = simulate_bhbe_null(heroes, 10)
pval_out = superheroes_p_value(heroes)

if 'q5' in questions or questions == [] or 'all' in questions:
    print(grader.check("q5"))

skittles_fp = Path('data') / 'skittles.tsv'
skittles = pd.read_csv(skittles_fp, sep='\t')
skittles.head()

skittles.shape

# don't change this cell -- it is needed for the tests to work
# cell may take about 1-2 minutes to execute to completion
skittles_fp = Path('data') / 'skittles.tsv'
skittles = pd.read_csv(skittles_fp, sep='\\t', engine='python')
q6_diff_of_means_out = diff_of_means(skittles)
q6_simulate_null_out = simulate_null(skittles)
q6_pval_out = color_p_value(skittles)

if 'q6' in questions or questions == [] or 'all' in questions:
    print(grader.check("q6"))

# don't change this cell -- it is needed for the tests to work
q7_out = ordered_colors()
q7_colors = {'green', 'orange', 'purple', 'red', 'yellow'}
q7_test_colors = [x[0] for x in q7_out]

if 'q7' in questions or questions == [] or 'all' in questions:
    print(grader.check("q7"))

# don't change this cell -- it is needed for the tests to work
q8_out = same_color_distribution()

if 'q8' in questions or questions == [] or 'all' in questions:
    print(grader.check("q8"))

# don't change this cell -- it is needed for the tests to work
q9_out = perm_vs_hyp()

if 'q9' in questions or questions == [] or 'all' in questions:
    print(grader.check("q9"))


